# ===============================
# SERVER CONFIGURATION
# ===============================
# Port where the application will run
server.port=8080

# Context path for all endpoints (optional - remove if you want endpoints at root)
# server.servlet.context-path=/api

# Server compression
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# ===============================
# APPLICATION CONFIGURATION
# ===============================
spring.application.name=simple-springboot-app

# Application banner
spring.banner.location=classpath:banner.txt
# spring.main.banner-mode=off

# ===============================
# LOGGING CONFIGURATION
# ===============================
# Root logging level
logging.level.root=INFO

# Package-specific logging levels
logging.level.com.example.simplespringbootapp=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.springframework.boot=INFO

# Console logging pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n

# File logging (uncomment to enable)
# logging.file.name=logs/spring-boot-app.log
# logging.file.path=logs/
# logging.file.max-size=10MB
# logging.file.max-history=30
# logging.file.total-size-cap=100MB
# logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n

# Log specific packages
# logging.level.org.hibernate=DEBUG
# logging.level.org.springframework.security=DEBUG

# ===============================
# JSON/HTTP MESSAGE CONFIGURATION
# ===============================
# Pretty print JSON responses (useful for development)
spring.jackson.serialization.indent-output=true

# Date and time format
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=UTC

# Handle missing properties
spring.jackson.deserialization.fail-on-unknown-properties=false

# Include non-null values only
spring.jackson.default-property-inclusion=NON_NULL

# ===============================
# ERROR HANDLING CONFIGURATION
# ===============================
# Include error details in response
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
server.error.include-exception=false

# Custom error path
# server.error.path=/error

# ===============================
# ACTUATOR CONFIGURATION (if actuator is added)
# ===============================
# Uncomment these if you add spring-boot-starter-actuator dependency

# Enable actuator endpoints
# management.endpoints.web.exposure.include=health,info,metrics,env,loggers
# management.endpoints.web.base-path=/actuator

# Health endpoint details
# management.endpoint.health.show-details=when-authorized
# management.endpoint.health.show-components=always

# Info endpoint
# management.info.env.enabled=true
# info.app.name=${spring.application.name}
# info.app.description=Simple Spring Boot Application
# info.app.version=1.0.0

# Metrics
# management.metrics.export.prometheus.enabled=true

# ===============================
# DEVELOPMENT/DEBUG CONFIGURATION
# ===============================
# Enable debug mode (shows more detailed logs)
# debug=true

# Show SQL queries (if using JPA/Hibernate)
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ===============================
# CUSTOM APPLICATION PROPERTIES
# ===============================
# Application metadata
app.name=Simple Spring Boot Application
app.version=1.0.0
app.description=A RESTful API with GET endpoints for learning Spring Boot
app.author=Your Name
app.contact.email=your.email@example.com
app.contact.website=https://yourwebsite.com

# Environment
app.environment=development
app.build.timestamp=@timestamp@
app.build.version=@project.version@

# Feature toggles
app.features.health-check=true
app.features.user-endpoints=true
app.features.calculator=true
app.features.detailed-logging=true

# API Configuration
app.api.version=v1
app.api.title=Simple Spring Boot API
app.api.description=REST API for demonstration purposes

# Default values
app.defaults.page-size=20
app.defaults.timeout=30000

# Rate limiting (if implemented)
app.rate-limit.requests-per-minute=100
app.rate-limit.enabled=false

# ===============================
# SECURITY CONFIGURATION (basic)
# ===============================
# Disable security for simple demo (if security is added)
# spring.security.user.name=admin
# spring.security.user.password=admin
# spring.security.user.roles=ADMIN

# ===============================
# DATABASE CONFIGURATION (if database is added)
# ===============================
# H2 Database (in-memory, for testing)
# spring.datasource.url=jdbc:h2:mem:testdb
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=password
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.h2.console.enabled=true

# MySQL Database
# spring.datasource.url=jdbc:mysql://localhost:3306/springbootdb
# spring.datasource.username=root
# spring.datasource.password=password
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true

# ===============================
# CACHE CONFIGURATION (if caching is added)
# ===============================
# spring.cache.type=simple
# spring.cache.cache-names=users,products

# ===============================
# INTERNATIONALIZATION
# ===============================
# Default locale
# spring.web.locale=en_US
# spring.web.locale-resolver=fixed

# Message source
# spring.messages.basename=messages
# spring.messages.encoding=UTF-8
# spring.messages.cache-duration=3600

# ===============================
# TESTING CONFIGURATION
# ===============================
# Test-specific properties (used during testing)
# spring.profiles.active=test (can be set via environment variable)

# ===============================
# PRODUCTION OPTIMIZATIONS
# ===============================
# JVM optimizations for production
# server.tomcat.max-threads=200
# server.tomcat.min-spare-threads=10
# server.tomcat.max-connections=8192

# Connection timeout
# server.tomcat.connection-timeout=20000

# ===============================
# MONITORING AND OBSERVABILITY
# ===============================
# Micrometer metrics
# management.metrics.tags.application=${spring.application.name}
# management.metrics.tags.environment=${app.environment}

# Tracing (if using Spring Cloud Sleuth)
# spring.sleuth.sampler.probability=1.0

# ===============================
# PROFILES
# ===============================
# Active profiles (can be overridden by environment variable)
# spring.profiles.active=development

# Profile-specific configurations
# Use application-dev.properties, application-prod.properties etc.